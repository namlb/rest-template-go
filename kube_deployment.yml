apiVersion: apps/v1
kind: Deployment
metadata:
  name: rest-go
  labels:
    app: rest-go
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rest-go
  template:
    metadata:
      labels:
        app: rest-go
    spec:
      containers:
        - name: rest-go
          image: rest-go:latest
          imagePullPolicy: IfNotPresent
          env:
            - name: POSTGRES_DSN
              value: postgresql://guest:guest@postgres.default.svc.cluster.local:5432/speakeasy?sslmode=disable
            - name: SPEAKEASY_ENVIRONMENT
              value: docker
          ports:
            - containerPort: 8080


---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  labels:
    app: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:alpine
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_PASSWORD
              value: guest
            - name: POSTGRES_USER
              value: guest
            - name: POSTGRES_DB
              value: speakeasy
          volumeMounts:
            - mountPath: /docker-entrypoint-initdb.d/
              name: migrations-volume
      volumes:
        - name: migrations-volume
          hostPath:
            path: /home/docker/rest-template-go/migrations/

---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  labels:
    app: postgres
spec:
  ports:
    - port: 5432
      targetPort: 5432
      protocol: TCP
  selector:
    app: postgres

---
apiVersion: v1
kind: Service
metadata:
  name: rest-go
spec:
  selector:
    app: rest-go
  ports:
    - name: rest-go-port
      protocol: TCP
      port: 8080
      targetPort: 8080